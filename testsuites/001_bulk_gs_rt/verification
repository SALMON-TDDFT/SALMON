#!/usr/bin/env python

# This verification script file is automatically executed after the SALMON.
# If necessary, this script file can used for the verification of the result.
# The script MUST indicate a "return-code 0", if the calculation is successful.
# If a negative value is returned, it is treated as a test failure.

import sys
import os
import re

print("#"*60)
print("# Verification start")

filelist = [
    "Si_eigen.data",
    "Si_k.data",
    "Si_rt.data",
]

checklist = {
    # Total Energy Check
    "Eall": [
        r"^\s*Eall\s*=\s*([E\+\-\.\d]+)\s*$",  # Regular expression
        -3.095228e+01,  # Reference value
        0.1,  # Permissible error
    ],
    # Bandgap Check
    "Bandgap": [
        r"^\s*The Bandgap\s+([E\+\-\.\d]+)\s*$",  # Regular expression
        5.607843e-02,  # Reference value
        1E-3,  # Permissible error
    ],
}


print("# Checking the existance of outputfile")
for item in filelist:
    if not os.path.exists(item):
        print("File not found: %s" % item)
        sys.exit(-1)  # Failure

print("# Checking calculated result of stdout")
result = {}
with open("outputfile") as fh_out:
    for line in fh_out:
        for name, [ptn, refval, error] in checklist.items():
            temp = re.match(ptn, line)
            if temp:
                result[name] = float(temp.group(1))

for name, [ptn, refval, error] in checklist.items():
    if name not in result:
        print("Result %s (%s) is not found" % (name, ptn))
        sys.exit(-1)  # Failure
    else:
        print("Result %s = %e (Reference = %e)" % (name, result[name], refval))
        if abs(result[name] - refval) > error:
            print("Mismatch |%e - %e| > %e)" % (result[name], refval, error))
            sys.exit(-1)  # Failure

print("# Verification end")
print("#"*60)

sys.exit(0)  # Success
